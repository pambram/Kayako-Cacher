// === CACHE STORAGE DEBUG ===
console.log('üîç DEBUGGING CACHE STORAGE');

// Check what's in localStorage
let kayakoItems = [];
for (let i = 0; i < localStorage.length; i++) {
  const key = localStorage.key(i);
  if (key && key.includes('kayako_cache_')) {
    kayakoItems.push(key);
    const value = localStorage.getItem(key);
    console.log(`Found: ${key}`);
    console.log(`  Value length: ${value?.length || 0} chars`);
    
    try {
      const parsed = JSON.parse(value);
      console.log(`  Posts: ${parsed.data?.data?.length || 0}`);
      console.log(`  Age: ${Math.round((Date.now() - parsed.timestamp) / 1000)}s`);
    } catch (e) {
      console.log(`  Parse error: ${e.message}`);
    }
  }
}
console.log(`Total Kayako cache entries: ${kayakoItems.length}`);

// Test manual storage
const testKey = 'kayako_cache_debug_test';
const testData = {
  data: { data: [{ id: 'debug', subject: 'Debug post' }] },
  timestamp: Date.now(),
  url: 'debug_url'
};

localStorage.setItem(testKey, JSON.stringify(testData));
console.log('‚úÖ Manual storage test successful');

const retrieved = localStorage.getItem(testKey);
console.log('‚úÖ Manual retrieval test:', retrieved ? 'SUCCESS' : 'FAILED');

// Clean up
localStorage.removeItem(testKey);
console.log('üéØ localStorage is working correctly');
bugsnag.js:641 üîç DEBUGGING CACHE STORAGE
bugsnag.js:641 Total Kayako cache entries: 0
bugsnag.js:641 ‚úÖ Manual storage test successful
bugsnag.js:641 ‚úÖ Manual retrieval test: SUCCESS
bugsnag.js:641 üéØ localStorage is working correctly
undefined
bugsnag.js:641 zone.offset has been deprecated in favor of zone.utcOffset
e.<computed> @ bugsnag.js:641
A @ tz.min.js:1
offset @ tz.min.js:1
formatTime @ i18n.js:145
(anonymous) @ component.js:52
Ut.get @ ember-metal.js:2904
te @ ember-metal.js:2270
n.compute @ references.js:116
n.value @ references.js:38
e.value @ runtime.js:723
e.processComponentArgs @ process-args.js:15
r.update @ curly.js:378
t.evaluate @ runtime.js:1867
e.execute @ runtime.js:6761
e.rerender @ runtime.js:7125
s.render @ renderer.js:68
e.runInTransaction @ ember-metal.js:621
e._renderRoots @ renderer.js:346
e._renderRootsTransaction @ renderer.js:384
e._revalidate @ renderer.js:426
e.invokeWithOnError @ backburner.js:300
e.flush @ backburner.js:159
e.flush @ backburner.js:361
e.end @ backburner.js:471
e._runExpiredTimers @ backburner.js:935
_boundRunExpiredTimers @ backburner.js:429
e.bugsnag @ bugsnag.js:259
(anonymous) @ bugsnag.js:1197
setTimeout
(anonymous) @ bugsnag.js:1196
i.setTimeout @ backburner.js:415
e._installTimerTimeout @ backburner.js:981
e._scheduleExpiredTimers @ backburner.js:958
e._runExpiredTimers @ backburner.js:934
_boundRunExpiredTimers @ backburner.js:429
e.bugsnag @ bugsnag.js:259
(anonymous) @ bugsnag.js:1197
setTimeout
(anonymous) @ bugsnag.js:1196
i.setTimeout @ backburner.js:415
e._installTimerTimeout @ backburner.js:981
e._reinstallTimerTimeout @ backburner.js:963
e._setTimeout @ backburner.js:887
e.later @ backburner.js:740
Se.later @ ember-metal.js:4168
(anonymous) @ index.js:125
T @ rsvp.js:459
F @ rsvp.js:901
e.timeout @ index.js:124
(anonymous) @ component.js:108
r @ polyfill.js:6151
(anonymous) @ polyfill.js:6442
e.<computed> @ polyfill.js:6203
_takeSafeStep @ -task-instance.js:363
_takeStep @ -task-instance.js:378
e.invokeWithOnError @ backburner.js:298
e.flush @ backburner.js:159
e.flush @ backburner.js:361
e.end @ backburner.js:471
e._runExpiredTimers @ backburner.js:935
_boundRunExpiredTimers @ backburner.js:429
e.bugsnag @ bugsnag.js:259
(anonymous) @ bugsnag.js:1197
setTimeout
(anonymous) @ bugsnag.js:1196
i.setTimeout @ backburner.js:415
e._installTimerTimeout @ backburner.js:981
e._scheduleExpiredTimers @ backburner.js:958
e._runExpiredTimers @ backburner.js:934
_boundRunExpiredTimers @ backburner.js:429
e.bugsnag @ bugsnag.js:259
(anonymous) @ bugsnag.js:1197
setTimeout
(anonymous) @ bugsnag.js:1196
i.setTimeout @ backburner.js:415
e._installTimerTimeout @ backburner.js:981
e._reinstallTimerTimeout @ backburner.js:963
e._setTimeout @ backburner.js:887
e.later @ backburner.js:740
Se.next @ ember-metal.js:4348
focusOut @ component.js:295
trigger @ core_view.js:65
n @ ember-utils.js:337
e.run @ backburner.js:550
e.join @ backburner.js:567
Se.join @ ember-metal.js:3918
(anonymous) @ has_element.js:18
e.flaggedInstrument @ ember-metal.js:3367
handleEvent @ has_element.js:17
e.default.n.Mixin.create.u.handleEvent @ view_support.js:179
_bubbleEvent @ event_dispatcher.js:280
(anonymous) @ event_dispatcher.js:208
dispatch @ jquery.js:5206
g.handle @ jquery.js:5014
trigger @ jquery.js:8201
simulate @ jquery.js:8260
n @ jquery.js:8319
e.bugsnag @ bugsnag.js:259
// === CACHE LOGIC DEBUG ===
console.log('üîç DEBUGGING CACHE LOGIC');

// Check current URL and case ID
const currentUrl = window.location.href;
const caseMatch = currentUrl.match(/\/cases\/(\d+)/);

console.log('Current URL:', currentUrl);
console.log('Case ID match:', caseMatch);

if (caseMatch) {
  const caseId = caseMatch[1];
  const testUrl = `/api/v1/cases/${caseId}/posts?limit=100&filters=all&include=*`;
  
  console.log('Case ID:', caseId);
  console.log('Test URL:', testUrl);
  
  // Generate cache key manually
  const cacheKey = `posts_${caseId}_initial_100`;
  const storageKey = `kayako_cache_${cacheKey}`;
  
  console.log('Generated cache key:', cacheKey);
  console.log('Storage key:', storageKey);
  
  // Check if this exact key exists
  const cached = localStorage.getItem(storageKey);
  console.log('Cache exists for this key:', !!cached);
  
  if (cached) {
    try {
      const parsed = JSON.parse(cached);
      console.log('‚úÖ Found cached data:', parsed.data?.data?.length || 0, 'posts');
    } catch (e) {
      console.log('‚ùå Parse error:', e.message);
    }
  }
} else {
  console.log('‚ùå Not on a case page');
}

console.log('üéØ Cache logic debug complete');
bugsnag.js:641 üîç DEBUGGING CACHE LOGIC
bugsnag.js:641 Current URL: https://central-supportdesk.kayako.com/agent/conversations/60177546
bugsnag.js:641 Case ID match: null
bugsnag.js:641 ‚ùå Not on a case page
bugsnag.js:641 üéØ Cache logic debug complete
undefined
// === WORKING CACHE TEST ===
console.log('üß™ IMMEDIATE CACHE FIX TEST');

// Get case ID from current page
const currentCaseId = window.location.href.match(/\/cases\/(\d+)/)?.[1];

if (currentCaseId) {
  console.log('‚úÖ Found case ID:', currentCaseId);
  
  // Test immediate cache storage and retrieval
  const testCacheKey = `kayako_cache_posts_${currentCaseId}_test_100`;
  const testData = {
    data: { data: [{ id: 'instant', subject: 'Instant test' }] },
    timestamp: Date.now(),
    url: 'instant_test'
  };
  
  // Store
  localStorage.setItem(testCacheKey, JSON.stringify(testData));
  console.log('üíæ Stored test cache');
  
  // Retrieve immediately
  const immediate = localStorage.getItem(testCacheKey);
  console.log('‚ö° Immediate retrieval:', immediate ? 'SUCCESS' : 'FAILED');
  
  // Test after timeout (simulating page reload delay)
  setTimeout(() => {
    const delayed = localStorage.getItem(testCacheKey);
    console.log('‚è∞ Delayed retrieval (500ms):', delayed ? 'SUCCESS' : 'FAILED');
    
    if (delayed) {
      console.log('üéâ Cache persistence working!');
      
      // Clean up
      localStorage.removeItem(testCacheKey);
    } else {
      console.log('‚ùå Cache not persisting');
    }
  }, 500);
  
} else {
  console.log('‚ùå Not on a case page, cannot test');
}
bugsnag.js:641 üß™ IMMEDIATE CACHE FIX TEST
bugsnag.js:641 ‚ùå Not on a case page, cannot test
undefined
